<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat App</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-100">
    <div class="main flex h-screen">
      <div class="chats w-1/4 bg-white border-r border-gray-200">
        <% onlineUser.forEach(ele => { %>
        <div
          class="cursor-pointer user flex items-center p-4 border-b border-gray-200"
          data-id="<%= ele._id %>"
          onclick="selectChat('<%= ele._id %>')"
        >
          <img
            src="<%= ele.image %>"
            alt="Profile"
            class="w-10 h-10 rounded-full"
          />
          <h1 class="ml-3 font-medium text-gray-800"><%= ele.displayName %></h1>
        </div>
        <% }) %>
      </div>
      <div class="chat-box flex-1 flex flex-col">
        <div class="chat-box-header p-4 bg-white border-b border-gray-200">
          <h1 class="font-medium text-gray-800">Chat Room</h1>
        </div>
        <div
          class="chat-box-body flex-1 p-4 overflow-y-auto flex flex-col gap-2"
        >
          <!-- Messages will be dynamically added here -->
        </div>
        <div class="sendmessage p-4 bg-white border-t border-gray-200">
          <div class="flex gap-2">
            <input
              type="text"
              placeholder="Type your message..."
              class="flex-1 p-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
            <button
              class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
              onclick="sendMessage()"
            >
              Send
            </button>
          </div>
        </div>
      </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();
      const userId = "<%=user._id%>";
      console.log(userId);
      socket.emit("join", userId);

      let receiver = "";

      // Automatically select the first user as the default receiver and fetch chat history
      window.onload = () => {
        const firstUser = document.querySelector(".user");
        if (firstUser) {
          const firstUserId = firstUser.getAttribute("data-id");
          selectChat(firstUserId);
        }
      };

      function selectChat(id) {
        receiver = id;

        // Highlight selected user
        document.querySelectorAll(".user").forEach((user) => {
          user.classList.remove("bg-blue-100");
        });
        document
          .querySelector(`[data-id="${id}"]`)
          .classList.add("bg-blue-100");

        // Fetch chat history
        fetch(`/chats/${id}`)
          .then((response) => response.json())
          .then((chats) => {
            console.log(chats);
            const chatBox = document.querySelector(".chat-box-body");
            chatBox.innerHTML = ""; // Clear previous messages
            chats.forEach((chat) => {
              console.log(1);
              const messageDiv = document.createElement("div");
              messageDiv.classList.add(
                "p-2",
                "rounded-lg",
                "mb-2",
                
              );
              if (chat.senderId === userId) {
  messageDiv.classList.add("p-2", "rounded-lg", "mb-2", "bg-blue-500", "text-white", "self-end");
} else {
  messageDiv.classList.add("p-2", "rounded-lg", "mb-2", "bg-gray-200", "text-black", "self-start");
}
              messageDiv.textContent = chat.message;
              chatBox.appendChild(messageDiv);
            });
          
          });
      }

      function sendMessage() {
        const input = document.querySelector("input");
        const message = input.value.trim();
        if (!message) return; // Prevent sending empty messages
        input.value = "";

        // Add message to sender's chat box
        const chatBox = document.querySelector(".chat-box-body");
        const messageDiv = document.createElement("div");
        messageDiv.classList.add(
          "p-2",
          "rounded-lg",
          "mb-2",
          "bg-blue-500",
          "text-white",
          "self-end"
        );
        messageDiv.textContent = message;
        chatBox.appendChild(messageDiv);

        socket.emit("message", {
          message,
          id: receiver,
        });
      }

      socket.on("msg", (obj) => {
        const chatBox = document.querySelector(".chat-box-body");
        const messageDiv = document.createElement("div");
        messageDiv.classList.add(
          "p-2",
          "rounded-lg",
          "mb-2",
          "bg-gray-200",
          "text-black",
          "self-start"
        );
        messageDiv.textContent = obj.message;
        chatBox.appendChild(messageDiv);
      });
    </script>
  </body>
</html>
